name: Validate and Push Docker Image (Reusable)

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      branches:
        description: "Branches to validate"
        required: false
        type: string
        default: '["main"]'
      dockerfiles:
        description: "Paths to Dockerfiles"
        required: false
        type: string
        default: '["Dockerfile"]'
      dockerhub_repo:
        description: "DockerHub repository name"
        required: true
        type: string
      docker_tags:
        description: "Docker image tags"
        required: false
        type: string
        default: '["latest"]'
      deploy_envs:
        description: "Deployment environments"
        required: false
        type: string
        default: '["staging"]'
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

jobs:
  validate-and-push:
    runs-on: ubuntu-latest
    environment: ${{ matrix.deploy_env }}

    strategy:
      matrix:
        branch: ${{ fromJson(inputs.branches || '["main"]') }}
        dockerfile: ${{ fromJson(inputs.dockerfiles || '["Dockerfile"]') }}
        docker_tag: ${{ fromJson(inputs.docker_tags || '["latest"]') }}
        deploy_env: ${{ fromJson(inputs.deploy_envs || '["staging"]') }}
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 0
          submodules: true

      - name: Validate Inputs
        run: |
          echo "Branch: ${{ matrix.branch }}"
          echo "Dockerfile: ${{ matrix.dockerfile }}"
          echo "Docker Tag: ${{ matrix.docker_tag }}"
          echo "Deployment Environment: ${{ matrix.deploy_env }}"

      - name: Validate Secrets
        run: |
          if [[ -z "${{ secrets.DOCKERHUB_USERNAME }}" || -z "${{ secrets.DOCKERHUB_PASSWORD }}" ]]; then
            echo "‚ùå Required secrets are missing!"
            exit 1
          fi
          echo "‚úÖ Secrets validation passed."

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Verify Docker Login
        run: |
          echo "üîç Checking Docker login..."
          if ! docker info | grep -q 'Username'; then
            echo "‚ùå Docker login failed!"
            exit 1
          fi
          echo "‚úÖ Docker login successful!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ inputs.dockerhub_repo }}:${{ matrix.docker_tag }}
          cache-from: type=registry,ref=${{ inputs.dockerhub_repo }}:latest
          cache-to: type=inline

      - name: Debug Docker Image Tags
        run: |
          echo "Successfully pushed Docker image: ${{ inputs.dockerhub_repo }}:${{ matrix.docker_tag }}"
