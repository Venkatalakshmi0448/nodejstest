name: Validate Application Pipeline

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      branch:
        description: "Branch to validate"
        required: false
        type: string
        default: "main"
      dockerfile:
        description: "Path to the Dockerfile"
        required: false
        type: string
        default: "Dockerfile"
      dockerhub_repo:
        description: "DockerHub repository name"
        required: false
        type: string
        default: "venkatalakshmi0448/nodejs-docker"
      docker_tag:
        description: "Docker image tag"
        required: false
        type: string
        default: ":latest"
      deploy_env:
        description: "Deployment environment"
        required: false
        type: string
        default: "staging"

jobs:
  validate:
    runs-on: ubuntu-latest
    environment:
      name: validate
    strategy:
      matrix:
        step: ['checkout', 'docker-login', 'docker-build-push']

    steps:
      # Checkout Code
      - name: Checkout Repository
        if: matrix.step == 'checkout'
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0
          submodules: true

      # Validate Inputs
      - name: Validate Inputs
        if: matrix.step == 'checkout'
        run: |
          echo "🚀 Validating inputs..."
          
          # Ensure dockerhub_repo is not empty
          if [[ -z "${{ inputs.dockerhub_repo }}" ]]; then
            echo "❌ dockerhub_repo is missing!"
            exit 1
          fi

          # Ensure docker_tag is not empty
          if [[ -z "${{ inputs.docker_tag }}" ]]; then
            echo "⚠️ docker_tag is empty, using 'latest'."
            echo "docker_tag=latest" >> $GITHUB_ENV
          else
            echo "docker_tag=${{ inputs.docker_tag }}" >> $GITHUB_ENV
          fi

          echo "✅ Inputs validation passed."

      # Validate Secrets
      - name: Validate Secrets
        if: matrix.step == 'docker-login'
        run: |
          echo "🔐 Validating secrets..."
          if [[ -z "${{ secrets.DOCKERHUB_USERNAME }}" || -z "${{ secrets.DOCKERHUB_PASSWORD }}" ]]; then
            echo "❌ Required secrets are missing!"
            exit 1
          fi
          echo "✅ Secrets validation passed."

      # Docker Login
      - name: Log in to DockerHub
        if: matrix.step == 'docker-login'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Verify Docker Login
      - name: Verify Docker Login
        if: matrix.step == 'docker-login'
        run: |
          echo "🔍 Checking Docker login..."
          if ! docker info | grep -q 'Username'; then
            echo "❌ Docker login failed!"
            exit 1
          fi
          echo "✅ Docker login successful!"

      # Set up Buildx
      - name: Set up Docker Buildx
        if: matrix.step == 'docker-build-push'
        uses: docker/setup-buildx-action@v2

      # Debug Docker Image Tags
      - name: Debug Docker Image Tags
        if: matrix.step == 'docker-build-push'
        run: |
          echo "🐳 DockerHub Repo: ${{ inputs.dockerhub_repo }}"
          echo "🏷️ Docker Image Tag: ${{ env.docker_tag }}"
          echo "📝 Full Image Name: ${{ inputs.dockerhub_repo }}:${{ env.docker_tag }}"

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        if: matrix.step == 'docker-build-push'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: |
            ${{ inputs.dockerhub_repo }}:${{ env.docker_tag }}
            ${{ inputs.dockerhub_repo }}:latest
          labels: "built-by=github-actions"
