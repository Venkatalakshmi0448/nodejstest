name: Validate Application Pipeline

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      branch:
        description: "Branch to validate"
        required: true
        type: string
      dockerfile:
        description: "Path to the Dockerfile"
        required: true
        type: string
        default: "dockerfile"
      dockerhub_repo:
        description: "DockerHub repository name"
        required: true
        type: string
        default: "venkatalakshmi0448/nodejs-docker"
      deploy_env:
        description: "Deployment environment"
        required: true
        type: string
        default: "staging"

jobs:
  validate:
    runs-on: ubuntu-latest
    environment:
      name: validate

    steps:
      # Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0  # Ensures full repository is checked out
          submodules: true  # If repo has submodules

      # Docker Login
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Verify Docker Login
        run: |
          echo "Checking Docker login status..."
          docker info | grep -q 'Username' && echo "‚úÖ Docker login successful!" || echo "‚ùå Docker login failed!"

      # Set up Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Extract metadata for tagging
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ inputs.dockerhub_repo }}

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  validate-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Environment Variables
        run: |
          echo "üîç Validating Environment Variables..."
          [[ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]] && echo "‚úÖ DOCKERHUB_USERNAME is set" || echo "‚ùå DOCKERHUB_USERNAME is missing"
          [[ -n "${{ secrets.DOCKERHUB_PASSWORD }}" ]] && echo "‚úÖ DOCKERHUB_PASSWORD is set" || echo "‚ùå DOCKERHUB_PASSWORD is missing"
