name: Validate Application Pipeline

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      branch:
        description: "Branch to validate"
        required: false
        type: string
        default: "main"
      dockerfile:
        description: "Path to the Dockerfile"
        required: false
        type: string
        default: "Dockerfile"
      dockerhub_repo:
        description: "DockerHub repository name"
        required: false
        type: string
        default: "venkatalakshmi0448/nodejs-docker"  # ‚úÖ Default set here
      docker_tag:
        description: "Docker image tag"
        required: false
        type: string
        default: "latest"
      deploy_env:
        description: "Deployment environment"
        required: false
        type: string
        default: "staging"

jobs:
  validate:
    runs-on: ubuntu-latest
    environment:
      name: validate

    steps:
      # Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0
          submodules: true

      # Validate Inputs Before Proceeding
      - name: Validate Inputs
        run: |
          echo "üöÄ Validating inputs..."
          if [[ -z "${{ inputs.dockerhub_repo }}" ]]; then
            echo "‚ö†Ô∏è dockerhub_repo is missing! Using default: venkatalakshmi0448/nodejs-docker"
            dockerhub_repo="venkatalakshmi0448/nodejs-docker"
          else
            dockerhub_repo="${{ inputs.dockerhub_repo }}"
          fi
          if [[ -z "${{ inputs.docker_tag }}" ]]; then
            echo "‚ö†Ô∏è docker_tag is empty, using 'latest'."
          fi
          echo "‚úÖ Inputs validation passed."

      # Validate Secrets Before Proceeding
      - name: Validate Secrets
        run: |
          echo "üîê Validating secrets..."
          if [[ -z "${{ secrets.DOCKERHUB_USERNAME }}" || -z "${{ secrets.DOCKERHUB_PASSWORD }}" ]]; then
            echo "‚ùå Required secrets are missing!"
            exit 1
          fi
          echo "‚úÖ Secrets validation passed."

      # Docker Login
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Verify Docker Login
      - name: Verify Docker Login
        run: |
          echo "üîç Checking Docker login..."
          if ! docker info | grep -q 'Username'; then
            echo "‚ùå Docker login failed!"
            exit 1
          fi
          echo "‚úÖ Docker login successful!"

      # Set up Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Debug Docker Image Tags
      - name: Debug Docker Image Tags
        run: |
          echo "üê≥"
